local colors = require('colorscheme.scheme').get_colors()

return {
  { 'Boolean', { link = '@boolean' } },
  { 'Character', { link = '@character' } },
  { 'Comment', { link = '@commnet' } },
  { 'Conditional', { link = '@condition' } },
  { 'Constant', { link = '@constant' } },
  { 'Define', { link = '@define' } },
  { 'Delimiter', { link = '@punctuation.delimiter' } },
  { 'Float', { link = '@float' } },
  { 'Function', { link = '@function' } },
  { 'Identifier', { link = '@variable' } },
  { 'Include', { link = '@include' } },
  { 'Keyword', { link = '@keyword' } },
  { 'Label', { link = '@label' } },
  { 'Number', { link = '@number' } },
  { 'Operator', { link = '@operator' } },
  { 'PreProc', { link = '@preproc' } },
  { 'Repeat', { link = '@repeat' } },
  { 'Special', { fg = colors.base0C } },
  { 'SpecialChar', { fg = colors.base0F } },
  { 'Statement', { fg = colors.base08 } },
  { 'StorageClass', { link = '@storageclass' } },
  { 'String', { link = '@string' } },
  { 'Structure', { fg = colors.base0E } },
  { 'Tag', { link = '@tag' } },
  { 'Todo', { link = '@text.todo' } },
  { 'Type', { link = '@type' } },
  { 'Typedef', { link = '@type.definition' } },
  { 'Conceal', { link = '@conceal' } },
  { 'Debug', { link = '@debug' } },
  { 'Error', { link = '@error' } },
  { 'Variable', { link = '@variable' } },

  { '@class', { link = 'Structure' } },
  { '@struct', { link = 'Structure' } },
  { '@enum', { link = '@type' } },
  { '@enumMember', { link = '@constant' } },
  { '@event', { link = '@variable' } },
  { '@interface', { link = 'Structure' } },
  { '@modifier', { link = '@variable' } },
  { '@regexp', { link = '@string.regex' } },
  { '@typeParameter', { link = '@type' } },
  { '@decorator', { link = '@variable' } },

  { 'TreesitterContext', { bg = colors.base01, italic = true } },

  { '@comment', { fg = colors.base03, italic = true } },
  { '@error', { fg = colors.base08 } },
  { '@none', { fg = colors.base05 } },
  { '@preproc', { fg = colors.base0A } },
  { '@define', { fg = colors.base0E } },
  { '@operator', { fg = colors.base05 } },

  { '@punctuation.delimiter', { fg = colors.base0F } },
  { '@punctuation.bracket', { fg = colors.base05 } },
  { '@punctuation.special', { fg = colors.base05 } },

  { '@string', { fg = colors.base0B } },
  { '@string.regex', { fg = colors.base0C } },
  { '@string.escape', { fg = colors.base0C } },
  { '@string.special', { fg = colors.base0F } },

  { '@character', { fg = colors.base08 } },
  { '@character.special', { fg = colors.base0F } },

  { '@boolean', { fg = colors.base09 } },
  { '@number', { fg = colors.base09 } },
  { '@float', { fg = colors.base09 } },

  { '@function', { fg = colors.base0D } },
  { '@function.builtin', { fg = colors.base0D } },
  { '@function.call', { fg = colors.base0D } },
  { '@function.macro', { fg = colors.base08 } },

  { '@method', { fg = colors.base0D } },
  { '@method.call', { fg = colors.base0D } },

  { '@constructor', { fg = colors.base0D } },
  { '@parameter', { fg = colors.base05 } },

  { '@keyword', { fg = colors.base0E } },
  { '@keyword.function', { fg = colors.base0E } },
  { '@keyword.operator', { fg = colors.base0E } },
  { '@keyword.return', { fg = colors.base0E } },

  { '@conditional', { fg = colors.base0E } },
  { '@conditional.ternary', { fg = colors.base0C } },
  { '@repeat', { fg = colors.base0E } },
  { '@debug', { fg = colors.base08 } },
  { '@label', { fg = colors.base0A } },
  { '@include', { fg = colors.base0D } },
  { '@exception', { fg = colors.base08 } },

  { '@type', { fg = colors.base0A } },
  { '@type.builtin', { fg = colors.base0A, italic = true } },
  { '@type.definition', { fg = colors.base0A } },
  { '@type.qualifier', { fg = colors.base0A } },

  { '@storageclass', { fg = colors.base0A } },
  { '@attribute', { fg = colors.base0A } },
  { '@field', { fg = colors.base05 } },
  { '@property', { fg = colors.base05 } },

  { '@variable', { fg = colors.base08 } },
  { '@variable.builtin', { fg = colors.base08, italic = true } },

  { '@constant', { fg = colors.base09 } },
  { '@constant.builtin', { fg = colors.base09 } },
  { '@constant.macro', { fg = colors.base09 } },

  { '@namespace', { fg = colors.base08 } },
  { '@symbol', { fg = colors.base0B } },

  { '@text', { fg = colors.base05 } },
  { '@text.strong', { bold = true } },
  { '@text.emphasis', { fg = colors.base09, italic = true } },
  { '@text.underline', { fg = colors.base00, underline = true } },
  { '@text.strike', { fg = colors.base00, strikethrough = true } },
  { '@text.title', { fg = colors.base0D } },
  { '@text.literal', { fg = colors.base09 } },
  { '@text.uri', { fg = colors.base09, underline = true } },
  { '@text.math', { fg = colors.base09 } },
  { '@text.environment', { fg = colors.base08 } },
  { '@text.environment.name', { fg = colors.base0A } },
  { '@text.reference', { fg = colors.base05 } },

  { '@text.todo', { fg = colors.base0A, bg = colors.base01 } },
  { '@text.note', { fg = colors.base0A } },
  { '@text.warning', { fg = colors.base0E } },
  { '@text.danger', { fg = colors.base08 } },

  { '@text.diff.add', { fg = colors.base09 } },
  { '@text.diff.delete', { fg = colors.base09 } },

  { '@tag', { fg = colors.base0A } },
  { '@tag.attribute', { fg = colors.base0A } },
  { '@tag.delimiter', { fg = colors.base0F } },

  { '@conceal', { bg = 'none' } },

  -- { '@spell', { underline = true } },
  -- { '@nospell', { underline = false } },

  { '@definition', { sp = colors.base04, underline = true } },
  { '@definition.constant', { sp = colors.base0F } },
  { '@definition.function', { sp = colors.base0F } },
  { '@definition.method', { sp = colors.base0F } },
  { '@definition.var', { sp = colors.base0F } },
  { '@definition.parameter', { sp = colors.base0F } },
  { '@definition.macro', { sp = colors.base0F } },
  { '@definition.type', { sp = colors.base0F } },
  { '@definition.field', { sp = colors.base0F } },
  { '@definition.enum', { sp = colors.base0F } },
  { '@definition.namespace', { sp = colors.base0F } },
  { '@definition.import', { sp = colors.base0F } },
  { '@definition.associated', { sp = colors.base0F } },
}
