local colors = require 'colorscheme.colors'

return {
  { 'Boolean', { link = '@boolean' } },
  { 'Character', { link = '@character' } },
  { 'Comment', { link = '@comment' } },
  { 'Conditional', { fg = colors.base0E } },
  { 'Constant', { link = '@constant' } },
  { 'Define', { fg = colors.base0E } },
  { 'Delimiter', { link = '@punctuation.delimiter' } },
  { 'Number', { link = '@number' } },
  { 'Float', { link = '@number' } },
  { 'Function', { link = '@function' } },
  { 'Identifier', { link = '@variable' } },
  { 'Variable', { link = '@variable' } },
  { 'Include', { link = '@keyword' } },
  { 'Keyword', { link = '@keyword' } },
  { 'Label', { link = '@label' } },
  { 'Operator', { link = '@operator' } },
  { 'PreProc', { fg = colors.base0A } },
  { 'Repeat', { fg = colors.base0E } },
  { 'Special', { fg = colors.base0C } },
  { 'SpecialChar', { fg = colors.base0F } },
  { 'Statement', { fg = colors.base08 } },
  { 'StorageClass', { fg = colors.base0A } },
  { 'String', { link = '@string' } },
  { 'Structure', { fg = colors.base0E } },
  { 'Tag', { link = '@tag' } },
  { 'Todo', { fg = colors.base0A, bg = colors.base02 } },
  { 'Type', { link = '@type' } },
  { 'Typedef', { link = '@type.definition' } },
  { 'Conceal', { bg = 'none' } },
  { 'Debug', { fg = colors.base08 } },
  { 'Error', { fg = colors.base08 } },
}
